#!/bin/bash

# Script de Instala√ß√£o do CasinoFound
# Este script configura e inicia o projeto CasinoFound

set -e

echo "üöÄ Iniciando instala√ß√£o do CasinoFound..."

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o encontrado. Instalando Docker..."
    
    # Instalar Docker (Ubuntu/Debian)
    sudo apt-get update
    sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    
    # Adicionar usu√°rio ao grupo docker
    sudo usermod -aG docker $USER
    echo "‚úÖ Docker instalado com sucesso!"
fi

# Verificar se Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n√£o encontrado. Instalando..."
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose instalado com sucesso!"
fi

# Verificar se o arquivo .env existe
if [ ! -f .env ]; then
    echo "üìù Criando arquivo .env..."
    cp .env.production .env
    echo "‚ö†Ô∏è  IMPORTANTE: Edite o arquivo .env com suas configura√ß√µes antes de continuar!"
    echo "   - Altere as senhas do banco de dados"
    echo "   - Configure sua chave JWT"
    echo "   - Defina o endere√ßo do admin"
    read -p "Pressione Enter ap√≥s editar o arquivo .env..."
fi

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios..."
mkdir -p backend/uploads
mkdir -p logs
mkdir -p data/mongodb
mkdir -p data/redis

# Definir permiss√µes
chmod 755 backend/uploads
chmod 755 logs

echo "üîß Configurando ambiente..."

# Verificar se as portas est√£o dispon√≠veis
check_port() {
    if lsof -Pi :$1 -sTCP:LISTEN -t >/dev/null ; then
        echo "‚ùå Porta $1 j√° est√° em uso!"
        echo "   Pare o servi√ßo que est√° usando esta porta ou altere a configura√ß√£o."
        exit 1
    fi
}

echo "üîç Verificando portas..."
check_port 80
check_port 5000
check_port 27017

echo "üê≥ Construindo imagens Docker..."
docker-compose build --no-cache

echo "üöÄ Iniciando servi√ßos..."
docker-compose up -d

echo "‚è≥ Aguardando servi√ßos iniciarem..."
sleep 30

# Verificar se os servi√ßos est√£o rodando
echo "üîç Verificando status dos servi√ßos..."
if docker-compose ps | grep -q "Up"; then
    echo "‚úÖ Servi√ßos iniciados com sucesso!"
else
    echo "‚ùå Erro ao iniciar servi√ßos. Verificando logs..."
    docker-compose logs
    exit 1
fi

# Testar conectividade
echo "üß™ Testando conectividade..."

# Testar backend
if curl -f http://localhost:5000/api/health > /dev/null 2>&1; then
    echo "‚úÖ Backend respondendo na porta 5000"
else
    echo "‚ö†Ô∏è  Backend pode n√£o estar respondendo ainda. Aguarde alguns minutos."
fi

# Testar frontend
if curl -f http://localhost > /dev/null 2>&1; then
    echo "‚úÖ Frontend respondendo na porta 80"
else
    echo "‚ö†Ô∏è  Frontend pode n√£o estar respondendo ainda. Aguarde alguns minutos."
fi

echo ""
echo "üéâ Instala√ß√£o conclu√≠da!"
echo ""
echo "üìã Informa√ß√µes importantes:"
echo "   ‚Ä¢ Frontend: http://localhost"
echo "   ‚Ä¢ Backend API: http://localhost:5000"
echo "   ‚Ä¢ MongoDB: localhost:27017"
echo ""
echo "üîß Comandos √∫teis:"
echo "   ‚Ä¢ Ver logs: docker-compose logs -f"
echo "   ‚Ä¢ Parar servi√ßos: docker-compose down"
echo "   ‚Ä¢ Reiniciar: docker-compose restart"
echo "   ‚Ä¢ Atualizar: docker-compose pull && docker-compose up -d"
echo ""
echo "‚ö†Ô∏è  Lembre-se de:"
echo "   ‚Ä¢ Configurar seu dom√≠nio e SSL em produ√ß√£o"
echo "   ‚Ä¢ Fazer backup regular do banco de dados"
echo "   ‚Ä¢ Monitorar os logs regularmente"
echo ""
echo "üìö Para mais informa√ß√µes, consulte o README.md"

